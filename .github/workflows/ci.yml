name: CI/CD Pipeline  # Nome do workflow, indicando que se trata de um pipeline de integração contínua.

on:
  push:
    branches:
      - main  # O workflow será acionado quando houver um push na branch 'main'.
      - github-actions  # Também será acionado ao fazer push na branch 'github-actions'.
  pull_request:  # Além disso, o workflow será executado quando houver um pull request em qualquer branch.

jobs:
  build:  # Definição do job chamado 'build', responsável por rodar testes e configurar dependências.
    runs-on: ubuntu-latest  # Define que o ambiente onde o job será executado será um Ubuntu na versão mais recente.

    steps:
      - name: Checkout do código  # Passo para clonar o repositório no ambiente do GitHub Actions.
        uses: actions/checkout@v4  # Utiliza a ação oficial do GitHub para fazer o checkout do código.

      - name: Configurar Python  # Passo para configurar o ambiente Python.
        uses: actions/setup-python@v4  # Utiliza uma ação do GitHub para instalar Python.
        with:
          python-version: '3.13'  # Define a versão do Python a ser usada (3.13).

      - name: Instalar dependências  # Instala as dependências da aplicação.
        run: |
          python -m pip install --upgrade pip  # Atualiza o gerenciador de pacotes (pip).
          pip install -r requirements.txt  # Instala as dependências definidas no arquivo requirements.txt.

      - name: Rodar testes  # Executa os testes para validar a aplicação.
        run: |
          python manage.py test  # Roda os testes do Django para verificar se tudo funciona corretamente.